#!/usr/bin/env node

const Dex = require('../../pokemon-showdown/.sim-dist/dex').Dex;
const fs = require('fs');
const path = require('path');

const TIERS = {};

for (let gen = 1; gen <= 8; gen++) {
	TIERS[gen] = {};

	const dex = Dex.forFormat('gen' + gen + 'ou');
	for (const k in dex.data.Pokedex) {
		const val = dex.getSpecies(k);
		if (!val || (typeof val.exists === 'boolean' && !val.exists) || val.gen > gen) continue;
		if (val.tier === 'Unreleased') continue;
		if (val.tier.startsWith('CAP') && gen < 4) continue;

		const id = val.id === 'aegislash' ? 'aegislashshield' : val.id;
		let tier = val.tier;
		if (tier === 'Illegal' && gen === 8 && TIERS[7][id] !== 'Illegal') {
			switch (Dex.toID(TIERS[7][id])) {
				case 'uubl': case 'uu':
					tier = 'OU';
					break;
				case 'rubl': case 'ru':
					tier = 'UU';
					break;
				case 'nubl': case 'nu': case 'publ': case 'pu':
					tier = 'RU';
					break;
				}
		}
		TIERS[gen][id] = tier;
	}
}

const src = path.resolve(__dirname, 'src');
fs.writeFileSync(path.join(src, 'tiers.json'), JSON.stringify(TIERS, null, 2));